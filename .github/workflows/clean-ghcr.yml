name: üßπ Clean GHCR SHA256 Images

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

permissions:
  packages: write
  contents: read

jobs:
  clean:
    runs-on: ubuntu-latest
    steps:
      - name: üßæ Delete SHA256-named GHCR images
        env:
          GH_TOKEN: ${{ github.token }}
          REPO_NAME: ${{ github.repository }}
        run: |
          PACKAGE=$(basename "$REPO_NAME")
          echo "üì¶ Repo: $REPO_NAME"
          echo "üì¶ Package: $PACKAGE"

          echo "üîç Fetching versions..."
          VERSIONS_JSON=$(gh api -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            /user/packages/container/$PACKAGE/versions \
            --paginate)

          if [ -z "$VERSIONS_JSON" ]; then
            echo "‚ùå No versions found."
            exit 1
          fi

          VERSIONS=$(echo "$VERSIONS_JSON" | jq -r 'sort_by(.created_at) | reverse | .[] | select(.name | startswith("sha256:")) | .id')

          if [ -z "$VERSIONS" ]; then
            echo "‚úÖ No SHA256 versions."
            exit 0
          fi

          echo "üßπ Found versions:"
          echo "$VERSIONS" | while read -r vid; do echo "  ‚Ä¢ $vid"; done

          for vid in $VERSIONS; do
            echo "üóëÔ∏è Deleting ID: $vid"
            if ! gh api -X DELETE \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GH_TOKEN" \
              /user/packages/container/$PACKAGE/versions/$vid 2> error.log; then
              if grep -q "You cannot delete the last tagged version" error.log; then
                echo "‚ö†Ô∏è Skipped (last tagged): $vid"
              else
                echo "‚ùå Error deleting $vid"
                cat error.log
              fi
            else
              echo "‚úÖ Deleted: $vid"
            fi
          done
